# This file specifies intentionally untracked files that all Moodle git
# repositories should ignore. It is recommended not to modify this file in your
# local clone. Instead, use .git/info/exclude and add new records there as
# needed.
#
# Example: if you deploy a contributed plugin mod/foobar into your site, put
# the following line into .git/info/exclude file in your Moodle clone:
# /mod/foobar/
#
# See gitignore(5) man page for more details
#

# Swap files (vim)
[._]*.s[a-v][a-z]
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]
# Temporary files including undo
*~
#
/config.php
/tags
/TAGS
/cscope.*
/.patches/
/.idea/
.phpstorm.*
!/.phpstorm.meta.php/
/.phpstorm.meta.php/*
!/.phpstorm.meta.php/di.php
/nbproject/
CVS
.DS_Store
/.settings/
/.project
/.buildpath
/.cache
.phpunit.result.cache
phpunit.xml
# Composer support. Do not ignore composer.json, or composer.lock. These should be shipped by us.
composer.phar
/vendor/
/behat.yml
*/yui/build/*/*-coverage.js
/lib/yuilib/*/build/*/*-coverage.js
# lib/yuilib/version/module/module-coverage.js
/lib/yuilib/*/*/*-coverage.js
atlassian-ide-plugin.xml
/node_modules/
/.vscode/
moodle-plugin-ci.phar
.eslintignore
.stylelintignore
/jsdoc
/admin/tool/componentlibrary/docs
/admin/tool/componentlibrary/hugo/site/data/my-index.json
.hugo_build.lock
phpcs.xml
jsconfig.json
UPGRADING-CURRENT.md


### BGWS removing unnecessary plugins

# Behat is PHP testing framework
/admin/tool/behat

# checks accessibility of site
/admin/tool/brickfield

# List all components via Grunt
/admin/tool/componentlibrary

# Add a custom language
/admin/tool/customlang

# Transfer DB
/admin/tool/dbtransfer

# Generate testing courses
/admin/tool/generator

# Update all links from HTTP to HTTPS
/admin/tool/httpsreplace

# Install plugin by uploading zip or from Moodle plugin catalog
/admin/tool/installaddon

# IOMAD tool to create fake users for testing
/admin/tool/iomadsite

# Allow in-bound emails to system
/admin/tool/messageinbound

# Allow privileged user import content from MoodleNet
/admin/tool/moodlenet

# Fix lang tags from previous format
/admin/tool/multilangupgrade

# Allow OAuth2 with predefined SPs or custom
/admin/tool/oauth2

# PHP Unit tests documentation
/admin/tool/phpunit

# Profiling for PHP (requires other libraries)
/admin/tool/profiling

# Search all users to find spam users
/admin/tool/spamcleaner

# CAS Authentication
/auth/cas

# Authenticate users against external DB
/auth/db

# IOMAD specific OIDC
/auth/iomadoidc

# IOMAD specific SAML2
/auth/iomadsaml2

# LDAP authentication
/auth/ldap

# LTI authentication
/auth/lti

# MoodleNet authentication
/auth/mnet

# OAuth2 authentication
/auth/oauth2

# Shibboleth authentication
/auth/shibboleth